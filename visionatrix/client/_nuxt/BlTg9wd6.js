import{_ as N}from"./DIicaaYA.js";import{_ as P}from"./B5yPpNeP.js";import{f as $,u as D,q as E,y as q,s as T,B as h,g as H,x as R,v as K,C as j,i as f,w as a,A as J,o as p,a as s,b as t,p as o,c as x,k as g,d as r,t as A,m as Q,D as I}from"./WHgTFjnX.js";import{_ as W}from"./CC82RcwU.js";import{_ as X}from"./7SGk0J2b.js";import{_ as Y}from"./CjZld9f2.js";import{_ as Z}from"./NycWn-Ia.js";import{_ as ee}from"./B7OzIgmV.js";const oe={class:"flex flex-col md:flex-row"},le={class:"px-5 pb-5 md:w-4/5"},te={key:0,class:"admin-settings mb-3"},ie={key:0,class:"text-gray-400 text-sm"},se={key:0},ae={class:"flex items-center relative"},ne={class:"flex items-center relative"},re={class:"flex items-center relative"},de={class:"flex items-center"},ue={class:"flex items-center relative"},me={class:"flex w-full items-center my-2"},pe={class:"flex w-full items-center my-2"},ge={class:"flex items-center"},ce={class:"flex items-center"},_e={key:1,class:"mb-5 py-4"},fe={class:"flex items-center space-x-3"},ve={class:"user-settings mb-3"},ye={class:"flex items-center relative"},ze=$({__name:"index",setup(ke){D({title:"Settings - Visionatrix",meta:[{name:"description",content:"Settings - Visionatrix"}]});const z=E(),l=q(),y=T(),F=["huggingface_auth_token","civitai_auth_token","google_api_key","google_api_key_user","google_proxy","gemini_model","ollama_url","ollama_vision_model","ollama_llm_model","ollama_keepalive","translations_provider","llm_provider"],w=h(!1);function S(){w.value=!0,l.saveChanges(F).finally(()=>{w.value=!1})}const v=H(),b=h(null),M=h(!1),O=R(()=>l.ollamaFetchError!==""&&(l.settingsMap.ollama_vision_model.value!==""||l.settingsMap.ollama_llm_model.value!==""||l.settingsMap.translations_provider.value==="ollama"||l.settingsMap.llm_provider.value==="ollama"));function G(){const _=b.value.$refs.input.files[0]||null;if(!_){y.add({title:"No file selected",description:"Please select a file to upload"});return}M.value=!0,v.uploadFlow(_).then(e=>{if(console.debug("uploadFlow",e),e&&"detail"in e&&(e==null?void 0:e.detail)!==""){y.add({title:"Error uploading flow",description:e.detail});return}else y.add({title:"Flow uploaded",description:"Flow uploaded successfully"});b.value.$refs.input.value=""}).catch(e=>{console.debug("uploadFlow error",e),y.add({title:"Error uploading flow",description:e.message})}).finally(()=>{M.value=!1})}K(()=>v.outputMaxSize,()=>{v.saveUserOptions()}),j(()=>{l.loadAllSettings()});const n=h({huggingface_auth_token:!1,civitai_auth_token:!1,google_api_key:!1,google_api_key_user:!1,google_proxy:!1});return(_,e)=>{const L=N,c=P,d=Q,u=W,V=X,k=Y,U=Z,C=ee,B=J;return p(),f(B,{class:"lg:h-dvh"},{default:a(()=>[s("div",oe,[t(L,{links:o(l).links,class:"md:w-1/5"},null,8,["links"]),s("div",le,[o(z).isAdmin?(p(),x("div",te,[e[30]||(e[30]=s("h3",{class:"mb-3 text-xl font-bold"},"Admin preferences (global settings)",-1)),o(l).other.current_version!==""?(p(),x("div",ie,[s("span",null,"Current version: "+A(o(l).other.current_version),1),e[25]||(e[25]=r("Â  ")),o(l).other.next_version!==""?(p(),x("span",se,"Next version: "+A(o(l).other.next_version),1)):g("",!0)])):g("",!0),t(u,{size:"md",class:"py-3",label:"Huggingface Auth token",description:"Bearer authentication token from your Huggingface account to allow downloading gated models with limited access."},{default:a(()=>[s("div",ae,[t(c,{modelValue:o(l).settingsMap.huggingface_auth_token.value,"onUpdate:modelValue":e[0]||(e[0]=i=>o(l).settingsMap.huggingface_auth_token.value=i),placeholder:"Huggingface Auth token",class:"w-full",type:o(n).huggingface_auth_token?"text":"password",icon:"i-heroicons-shield-check",size:"md",autocomplete:"off"},null,8,["modelValue","type"]),t(d,{icon:o(n).huggingface_auth_token?"i-heroicons-eye-slash-solid":"i-heroicons-eye-solid",variant:"ghost",color:"white",class:"ml-1 absolute right-1",onClick:e[1]||(e[1]=()=>{o(n).huggingface_auth_token=!o(n).huggingface_auth_token})},null,8,["icon"])])]),_:1}),t(u,{size:"md",class:"py-3",label:"CivitAI Auth Token",description:"Auth token for CivitAI flows and models."},{default:a(()=>[s("div",ne,[t(c,{modelValue:o(l).settingsMap.civitai_auth_token.value,"onUpdate:modelValue":e[2]||(e[2]=i=>o(l).settingsMap.civitai_auth_token.value=i),placeholder:"CivitAI Auth Token",class:"w-full",type:o(n).civitai_auth_token?"text":"password",icon:"i-heroicons-shield-check",size:"md",autocomplete:"off"},null,8,["modelValue","type"]),t(d,{icon:o(n).civitai_auth_token?"i-heroicons-eye-slash-solid":"i-heroicons-eye-solid",variant:"ghost",color:"white",class:"ml-1 absolute right-1",onClick:e[3]||(e[3]=()=>{o(n).civitai_auth_token=!o(n).civitai_auth_token})},null,8,["icon"])])]),_:1}),t(V,{color:"blue",variant:"soft",icon:"i-heroicons-exclamation-circle",title:"Note"},{description:a(()=>e[26]||(e[26]=[r(" Access tokens are required for gated models. More information can be found "),s("a",{class:"hover:underline font-bold",href:"https://visionatrix.github.io/VixFlowsDocs/FlowsDeveloping/gated_models/",target:"_blank"},"here",-1),r(". ")])),_:1}),t(k,{class:"mt-3",label:"Gemini"}),e[31]||(e[31]=s("p",{class:"text-slate text-sm text-orange-300 dark:text-orange-100 text-center"},"Can be used by flows and as a translation provider",-1)),t(u,{size:"md",class:"py-3",label:"Google API key"},{description:a(()=>e[27]||(e[27]=[r(" Global Google API key, required for Flows, e.g. where ComfyUI-Gemini Node is used. Instruction how to obtain key can be found "),s("a",{class:"hover:underline font-bold",href:"https://ai.google.dev/gemini-api/docs/api-key"},"here",-1),r(". ")])),default:a(()=>[s("div",re,[t(c,{modelValue:o(l).settingsMap.google_api_key.value,"onUpdate:modelValue":e[4]||(e[4]=i=>o(l).settingsMap.google_api_key.value=i),placeholder:"Google API key",class:"w-full",type:o(n).google_api_key?"text":"password",icon:"i-heroicons-shield-check",size:"md",autocomplete:"off"},null,8,["modelValue","type"]),t(d,{icon:o(n).google_api_key?"i-heroicons-eye-slash-solid":"i-heroicons-eye-solid",variant:"ghost",color:"white",class:"ml-1 absolute right-1",onClick:e[5]||(e[5]=()=>{o(n).google_api_key=!o(n).google_api_key})},null,8,["icon"])])]),_:1}),t(u,{size:"md",class:"py-3",label:"Gemini model",description:"Override Gemini model to use."},{default:a(()=>[s("div",de,[t(U,{modelValue:o(l).settingsMap.gemini_model.value,"onUpdate:modelValue":e[6]||(e[6]=i=>o(l).settingsMap.gemini_model.value=i),color:"white",variant:"outline",placeholder:"Select Gemini model",options:o(l).settingsMap.gemini_model.options},null,8,["modelValue","options"]),o(l).settingsMap.gemini_model.value?(p(),f(d,{key:0,icon:"i-heroicons-x-mark",variant:"outline",color:"white",class:"ml-2",onClick:e[7]||(e[7]=()=>o(l).settingsMap.gemini_model.value="")})):g("",!0)])]),_:1}),t(u,{size:"md",class:"py-3",label:"Proxy (for Google)"},{description:a(()=>e[28]||(e[28]=[r(" Proxy to access Gemini configuration "),s("a",{class:"hover:underline font-bold",href:"https://visionatrix.github.io/VixFlowsDocs/AdminManual/Installation/proxy_gemini/"},"string",-1),r(". ")])),default:a(()=>[s("div",ue,[t(c,{modelValue:o(l).settingsMap.google_proxy.value,"onUpdate:modelValue":e[8]||(e[8]=i=>o(l).settingsMap.google_proxy.value=i),placeholder:"Proxy",class:"w-full",type:o(n).google_proxy?"text":"password",size:"md",icon:"i-heroicons-shield-check",autocomplete:"off"},null,8,["modelValue","type"]),t(d,{icon:o(n).google_proxy?"i-heroicons-eye-slash-solid":"i-heroicons-eye-solid",variant:"ghost",color:"white",class:"ml-1 absolute right-1",onClick:e[9]||(e[9]=()=>{o(n).google_proxy=!o(n).google_proxy})},null,8,["icon"])])]),_:1}),t(k,{class:"mt-3",label:"Ollama"}),e[32]||(e[32]=s("p",{class:"text-slate text-sm text-orange-300 dark:text-orange-100 text-center"},"Can be used by flows and as a translation provider",-1)),t(u,{size:"md",class:"py-3",label:"Ollama URL",description:"URL to server where Ollama is running."},{default:a(()=>[t(c,{modelValue:o(l).settingsMap.ollama_url.value,"onUpdate:modelValue":e[10]||(e[10]=i=>o(l).settingsMap.ollama_url.value=i),placeholder:"Ollama URL",class:"w-full",type:"text",size:"md",autocomplete:"off"},null,8,["modelValue"]),o(O)?(p(),f(V,{key:0,color:"yellow",variant:"soft",class:"mt-3",icon:"i-heroicons-exclamation-circle",title:"Failed to fetch Ollama models list",description:o(l).ollamaFetchError},{actions:a(()=>[t(d,{icon:"i-heroicons-arrow-path-solid",variant:"outline",color:"white",onClick:e[11]||(e[11]=()=>o(l).getOllamaModelsList())},{default:a(()=>e[29]||(e[29]=[r(" Retry ")])),_:1})]),_:1},8,["description"])):g("",!0)]),_:1}),t(u,{size:"md",class:"py-3",label:"Ollama Vision Model",description:"Override Ollama Vision model used by default."},{default:a(()=>{var i;return[s("div",me,[t(C,{modelValue:o(l).settingsMap.ollama_vision_model.value,"onUpdate:modelValue":e[12]||(e[12]=m=>o(l).settingsMap.ollama_vision_model.value=m),class:"w-full",options:(i=o(l).settingsMap.ollama_vision_model)!=null&&i.options?o(l).settingsMap.ollama_vision_model.options.map(m=>(m.label=`${m.model} (${("formatBytes"in _?_.formatBytes:o(I))(m.size)})`,m)):[],"value-attribute":"model",loading:o(l).settingsMap.ollama_vision_model.loading,placeholder:"Ollama Vision Model"},null,8,["modelValue","options","loading"]),o(l).settingsMap.ollama_vision_model.value?(p(),f(d,{key:0,icon:"i-heroicons-x-mark",variant:"outline",color:"white",class:"ml-2",onClick:e[13]||(e[13]=()=>o(l).settingsMap.ollama_vision_model.value="")})):g("",!0)])]}),_:1}),t(u,{size:"md",class:"py-3",label:"Ollama LLM Model",description:"Override Ollama LLM model used by default."},{default:a(()=>{var i;return[s("div",pe,[t(C,{modelValue:o(l).settingsMap.ollama_llm_model.value,"onUpdate:modelValue":e[14]||(e[14]=m=>o(l).settingsMap.ollama_llm_model.value=m),class:"w-full",options:(i=o(l).settingsMap.ollama_llm_model)!=null&&i.options?o(l).settingsMap.ollama_llm_model.options.map(m=>(m.label=`${m.model} (${("formatBytes"in _?_.formatBytes:o(I))(m.size)})`,m)):[],"value-attribute":"model",loading:o(l).settingsMap.ollama_llm_model.loading,placeholder:"Ollama LLM Model"},null,8,["modelValue","options","loading"]),o(l).settingsMap.ollama_llm_model.value?(p(),f(d,{key:0,icon:"i-heroicons-x-mark",variant:"outline",color:"white",class:"ml-2",onClick:e[15]||(e[15]=()=>o(l).settingsMap.ollama_llm_model.value="")})):g("",!0)])]}),_:1}),t(u,{size:"md",class:"py-3",label:"Ollama Keepalive",description:"Keep models in memory for specified minutes (e.g. 0.5 for 30 seconds). 0 unloads immediately; negative numbers keep indefinitely"},{default:a(()=>[t(c,{modelValue:o(l).settingsMap.ollama_keepalive.value,"onUpdate:modelValue":e[16]||(e[16]=i=>o(l).settingsMap.ollama_keepalive.value=i),placeholder:"Ollama Keepalive",class:"w-fit",type:"number",size:"md",step:"0.1",autocomplete:"off",onChange:e[17]||(e[17]=()=>{o(l).settingsMap.ollama_keepalive.value=o(l).settingsMap.ollama_keepalive.value.toString()})},null,8,["modelValue"])]),_:1}),t(k,{class:"mt-3",label:"AI providers"}),t(u,{size:"md",class:"py-3",label:"Translations provider",description:"Prompt translations provider. Empty if not enabled."},{default:a(()=>[s("div",ge,[t(U,{modelValue:o(l).settingsMap.translations_provider.value,"onUpdate:modelValue":e[18]||(e[18]=i=>o(l).settingsMap.translations_provider.value=i),color:"white",variant:"outline",placeholder:"Select translations provider",options:o(l).settingsMap.translations_provider.options},null,8,["modelValue","options"]),o(l).settingsMap.translations_provider.value?(p(),f(d,{key:0,icon:"i-heroicons-x-mark",variant:"outline",color:"white",class:"ml-2",onClick:e[19]||(e[19]=()=>o(l).settingsMap.translations_provider.value="")})):g("",!0)])]),_:1}),t(u,{size:"md",class:"py-3",label:"LLM provider",description:"LLM  provider. Empty if not enabled."},{default:a(()=>[s("div",ce,[t(U,{modelValue:o(l).settingsMap.llm_provider.value,"onUpdate:modelValue":e[20]||(e[20]=i=>o(l).settingsMap.llm_provider.value=i),color:"white",variant:"outline",placeholder:"Select LLM provider",options:o(l).settingsMap.llm_provider.options},null,8,["modelValue","options"]),o(l).settingsMap.llm_provider.value?(p(),f(d,{key:0,icon:"i-heroicons-x-mark",variant:"outline",color:"white",class:"ml-2",onClick:e[21]||(e[21]=()=>o(l).settingsMap.llm_provider.value="")})):g("",!0)])]),_:1})])):g("",!0),o(z).isAdmin?(p(),x("div",_e,[e[35]||(e[35]=s("h4",{class:"mb-3 font-bold"},"Upload Flow",-1)),e[36]||(e[36]=s("p",{class:"text-gray-400 text-sm mb-3"}," Upload a Visionatrix workflow file (.json) to add it to the available flows. Upon successful upload of a valid workflow file, the installation will start automatically. ",-1)),s("div",fe,[t(c,{ref_key:"flowFileInput",ref:b,type:"file",accept:".json",class:"w-auto"},null,512),t(d,{icon:"i-heroicons-arrow-up-tray-16-solid",variant:"outline",loading:o(M),onClick:G},{default:a(()=>e[33]||(e[33]=[r(" Upload Flow ")])),_:1},8,["loading"])]),t(V,{class:"mt-3",color:"blue",variant:"soft",icon:"i-heroicons-exclamation-circle",title:"Note"},{description:a(()=>e[34]||(e[34]=[r(" Requires a Visionatrix-adapted ComfyUI workflow, not a standard ComfyUI workflow. Instructions for adapting a ComfyUI workflow for Visionatrix are available "),s("a",{class:"hover:underline font-bold",href:"https://visionatrix.github.io/VixFlowsDocs/FlowsDeveloping/comfyui_vix_migration/"},"here",-1),r(". Custom workflows may require manual installation of dependencies (e.g., custom nodes) before upload. ")])),_:1})])):g("",!0),s("div",ve,[e[38]||(e[38]=s("h3",{class:"mb-3 text-xl font-bold"},"User preferences (overrides global)",-1)),t(u,{size:"md",class:"py-3",label:"Google API key"},{description:a(()=>e[37]||(e[37]=[r(" Google API key, required for Flows, e.g. where ComfyUI-Gemini Node is used. Instruction how to obtain key "),s("a",{class:"hover:underline font-bold",href:"https://ai.google.dev/gemini-api/docs/api-key"},"here",-1),r(". ")])),default:a(()=>[s("div",ye,[t(c,{modelValue:o(l).settingsMap.google_api_key_user.value,"onUpdate:modelValue":e[22]||(e[22]=i=>o(l).settingsMap.google_api_key_user.value=i),placeholder:"Google API key",class:"w-full",type:o(n).google_api_key_user?"text":"password",icon:"i-heroicons-shield-check",size:"md",autocomplete:"off"},null,8,["modelValue","type"]),t(d,{icon:o(n).google_api_key_user?"i-heroicons-eye-slash-solid":"i-heroicons-eye-solid",variant:"ghost",color:"white",class:"ml-1 absolute right-1",onClick:e[23]||(e[23]=()=>{o(n).google_api_key_user=!o(n).google_api_key_user})},null,8,["icon"])])]),_:1}),t(k,{class:"mt-3",label:"UI preferences"}),e[39]||(e[39]=s("p",{class:"text-slate text-sm text-orange-300 dark:text-orange-100 text-center"},"Stored in browser local storage",-1)),t(u,{size:"md",class:"py-3",label:"Outputs maximum image size",description:"To keep the output seamless, we limit the size of the outputs (512px by default)."},{default:a(()=>[t(C,{modelValue:o(v).$state.outputMaxSize,"onUpdate:modelValue":e[24]||(e[24]=i=>o(v).$state.outputMaxSize=i),options:["512","768","1024","1536","2048"]},null,8,["modelValue"])]),_:1})]),t(d,{icon:"i-heroicons-check-16-solid",loading:o(w),onClick:S},{default:a(()=>e[40]||(e[40]=[r(" Save ")])),_:1},8,["loading"])])])]),_:1})}}});export{ze as default};
