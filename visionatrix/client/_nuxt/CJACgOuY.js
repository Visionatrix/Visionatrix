import{_ as F,a as A}from"./DhZm3aMN.js";import{f as I,u as P,q as C,s as L,v as N,g as $,x as M,n as B,y as q,h as x,w as i,p as E,o as p,a,b as o,j as t,c as V,d as y,i as f,k as j,l as H}from"./Dv3jR7aH.js";import{_ as T,a as R}from"./Run6cAFy.js";import{_ as D,a as K}from"./5vlXd1-M.js";const W={class:"flex flex-col md:flex-row"},J={class:"px-5 pb-5 md:w-4/5"},Q={key:0,class:"admin-settings mb-3"},X={class:"flex items-center"},Y={class:"flex items-center"},Z={class:"flex items-center"},ee={key:1,class:"upload-flow mb-5 py-4 rounded-md"},le={class:"flex items-center space-x-3"},oe={class:"user-settings mb-3"},de=I({__name:"index",setup(te){P({title:"Settings - Visionatrix",meta:[{name:"description",content:"Settings - Visionatrix"}]});const k=[{label:"Settings",icon:"i-heroicons-cog-6-tooth-20-solid",to:"/settings"},{label:"Workers information",icon:"i-heroicons-chart-bar-16-solid",to:"/settings/workers"}],_=C(),l=L(),u=N();function h(){console.debug("Saving settings",l.settingsMap),Promise.all(Object.keys(l.settingsMap).map(n=>l.settingsMap[n].admin&&_.isAdmin?l.saveGlobalSetting(l.settingsMap[n].key,l.settingsMap[n].value,l.settingsMap[n].sensitive):l.saveUserSetting(l.settingsMap[n].key,l.settingsMap[n].value))).then(()=>{u.add({title:"Settings saved",description:"Settings saved successfully"})}).catch(n=>{u.add({title:"Error saving setting",description:n.message})})}const m=$(),v=M(null),w=M(!1);function U(){const n=v.value.$refs.input.files[0]||null;if(!n){u.add({title:"No file selected",description:"Please select a file to upload"});return}w.value=!0,m.uploadFlow(n).then(e=>{if(console.debug("uploadFlow",e),e&&"detail"in e&&(e==null?void 0:e.detail)!==""){u.add({title:"Error uploading flow",description:e.detail});return}else u.add({title:"Flow uploaded",description:"Flow uploaded successfully"});v.value.$refs.input.value=""}).catch(e=>{console.debug("uploadFlow error",e),u.add({title:"Error uploading flow",description:e.message})}).finally(()=>{w.value=!1})}return B(()=>m.outputMaxSize,()=>{m.saveUserOptions()}),q(()=>{l.loadAllSettings()}),(n,e)=>{const S=F,z=j,r=T,d=D,c=A,b=K,g=H,G=R,O=E;return p(),x(O,{class:"lg:h-dvh"},{default:i(()=>[a("div",W,[o(S,{links:k,class:"md:w-1/5"}),a("div",J,[t(_).isAdmin?(p(),V("div",Q,[e[14]||(e[14]=a("h3",{class:"mb-3 text-xl font-bold"},"Admin preferences (global settings)",-1)),a("div",X,[o(z,{name:"i-heroicons-question-mark-circle",class:"mr-2 text-amber-400"}),e[13]||(e[13]=a("p",{class:"text-amber-400"},[a("span",null,"Access tokens are required forÂ "),a("a",{class:"hover:underline underline-offset-4",href:"https://visionatrix.github.io/VixFlowsDocs/GatedModels.html",target:"_blank"},"gated models"),y(". ")],-1))]),o(d,{size:"md",class:"py-3",label:"Huggingface Auth token",description:"Bearer authentication token from your Huggingface account to allow downloading gated models with limited access"},{default:i(()=>[o(r,{modelValue:t(l).settingsMap.huggingface_auth_token.value,"onUpdate:modelValue":e[0]||(e[0]=s=>t(l).settingsMap.huggingface_auth_token.value=s),placeholder:"Huggingface Auth token",class:"w-full",type:"password",icon:"i-heroicons-shield-check",size:"md",autocomplete:"off"},null,8,["modelValue"])]),_:1}),o(c,{class:"mt-3",label:"Gemini"}),o(d,{size:"md",class:"py-3",label:"Google API key",description:"Global Google API key, required for Flows, e.g. where ComfyUI-Gemini Node is used"},{default:i(()=>[o(r,{modelValue:t(l).settingsMap.google_api_key.value,"onUpdate:modelValue":e[1]||(e[1]=s=>t(l).settingsMap.google_api_key.value=s),placeholder:"Google API key",class:"w-full",type:"password",icon:"i-heroicons-shield-check",size:"md",autocomplete:"off",readonly:"true"},null,8,["modelValue"])]),_:1}),o(d,{size:"md",class:"py-3",label:"Gemini model",description:"Choose Gemini model to use (if configured)"},{default:i(()=>[a("div",Y,[o(b,{modelValue:t(l).settingsMap.gemini_model.value,"onUpdate:modelValue":e[2]||(e[2]=s=>t(l).settingsMap.gemini_model.value=s),color:"white",variant:"outline",placeholder:"Select Gemini model",options:t(l).settingsMap.gemini_model.options},null,8,["modelValue","options"]),t(l).settingsMap.gemini_model.value?(p(),x(g,{key:0,icon:"i-heroicons-x-mark",variant:"outline",color:"white",class:"ml-2",onClick:e[3]||(e[3]=()=>t(l).settingsMap.gemini_model.value="")})):f("",!0)])]),_:1}),o(d,{size:"md",class:"py-3",label:"Proxy (for Google)",description:"Proxy configuration string (to access Gemini)"},{default:i(()=>[o(r,{modelValue:t(l).settingsMap.google_proxy.value,"onUpdate:modelValue":e[4]||(e[4]=s=>t(l).settingsMap.google_proxy.value=s),placeholder:"Proxy",class:"w-full",type:"text",size:"md",autocomplete:"off"},null,8,["modelValue"])]),_:1}),o(c,{class:"mt-3",label:"Ollama"}),o(d,{size:"md",class:"py-3",label:"Ollama URL",description:"URL to server where Ollama is running, required for flows using node with it"},{default:i(()=>[o(r,{modelValue:t(l).settingsMap.ollama_url.value,"onUpdate:modelValue":e[5]||(e[5]=s=>t(l).settingsMap.ollama_url.value=s),placeholder:"Ollama URL",class:"w-full",type:"text",size:"md",autocomplete:"off"},null,8,["modelValue"])]),_:1}),o(d,{size:"md",class:"py-3",label:"Ollama Vision Model",description:"Override Ollama Vision model used in workflows by default"},{default:i(()=>[o(r,{modelValue:t(l).settingsMap.ollama_vision_model.value,"onUpdate:modelValue":e[6]||(e[6]=s=>t(l).settingsMap.ollama_vision_model.value=s),placeholder:"Ollama Vision Model",class:"w-full",type:"text",size:"md",autocomplete:"off"},null,8,["modelValue"])]),_:1}),o(d,{size:"md",class:"py-3",label:"Ollama LLM Model",description:"Ollama LLM model used in workflows by default"},{default:i(()=>[o(r,{modelValue:t(l).settingsMap.ollama_llm_model.value,"onUpdate:modelValue":e[7]||(e[7]=s=>t(l).settingsMap.ollama_llm_model.value=s),placeholder:"Ollama Vision Model",class:"w-full",type:"text",size:"md",autocomplete:"off"},null,8,["modelValue"])]),_:1}),o(d,{size:"md",class:"py-3",label:"Ollama Keepalive",description:"Set Ollama keepalive time (e.g. 30s) for how long the model is kept in memory"},{default:i(()=>[o(r,{modelValue:t(l).settingsMap.ollama_llm_model.value,"onUpdate:modelValue":e[8]||(e[8]=s=>t(l).settingsMap.ollama_llm_model.value=s),placeholder:"Ollama LLM Model",class:"w-full",type:"text",size:"md",autocomplete:"off"},null,8,["modelValue"])]),_:1}),o(c,{class:"mt-3",label:"Prompt translations"}),o(d,{size:"md",class:"py-3",label:"Translations provider",description:"Prompt translations provider. Empty if not enabled."},{default:i(()=>[a("div",Z,[o(b,{modelValue:t(l).settingsMap.translations_provider.value,"onUpdate:modelValue":e[9]||(e[9]=s=>t(l).settingsMap.translations_provider.value=s),color:"white",variant:"outline",placeholder:"Select translations provider",options:t(l).settingsMap.translations_provider.options},null,8,["modelValue","options"]),t(l).settingsMap.translations_provider.value?(p(),x(g,{key:0,icon:"i-heroicons-x-mark",variant:"outline",color:"white",class:"ml-2",onClick:e[10]||(e[10]=()=>t(l).settingsMap.translations_provider.value="")})):f("",!0)])]),_:1})])):f("",!0),t(_).isAdmin?(p(),V("div",ee,[e[16]||(e[16]=a("h4",{class:"mb-3 font-bold"},"Upload Flow",-1)),e[17]||(e[17]=a("p",{class:"text-gray-400 text-sm mb-3"}," Upload a Visionatrix workflow file (.json) to add it to the available flows. On successful upload of the valid workflow file, the installation will start automatically. ",-1)),a("div",le,[o(r,{ref_key:"flowFileInput",ref:v,type:"file",accept:".json",class:"w-auto"},null,512),o(g,{icon:"i-heroicons-arrow-up-tray-16-solid",variant:"outline",loading:t(w),onClick:U},{default:i(()=>e[15]||(e[15]=[y(" Upload Flow ")])),_:1},8,["loading"])])])):f("",!0),a("div",oe,[e[18]||(e[18]=a("h3",{class:"mb-3 text-xl font-bold"},"User preferences (overrides global)",-1)),o(d,{size:"md",class:"py-3",label:"Google API key",description:"Google API key, required for Flows where, e.g. ComfyUI-Gemini Node is used"},{default:i(()=>[o(r,{modelValue:t(l).settingsMap.google_api_key_user.value,"onUpdate:modelValue":e[11]||(e[11]=s=>t(l).settingsMap.google_api_key_user.value=s),placeholder:"Google API key",class:"w-full",type:"password",icon:"i-heroicons-shield-check",size:"md",autocomplete:"off",readonly:"true"},null,8,["modelValue"])]),_:1}),o(c,{class:"mt-3",label:"UI preferences"}),e[19]||(e[19]=a("p",{class:"text-slate text-sm text-orange-100 text-center"},"Stored in browser local storage",-1)),o(d,{size:"md",class:"py-3",label:"Outputs maximum image size",description:"To keep the output seamless, we limit the size of the outputs (512px by default)"},{default:i(()=>[o(G,{modelValue:t(m).$state.outputMaxSize,"onUpdate:modelValue":e[12]||(e[12]=s=>t(m).$state.outputMaxSize=s),options:["512","768","1024","1536","2048"]},null,8,["modelValue"])]),_:1})]),o(g,{icon:"i-heroicons-check-16-solid",onClick:h},{default:i(()=>e[20]||(e[20]=[y(" Save ")])),_:1})])])]),_:1})}}});export{de as default};
