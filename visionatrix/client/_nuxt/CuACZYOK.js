import{_ as ee}from"./a20iE_Vi.js";import{a as te,_ as oe}from"./BT2i-rzJ.js";import{a as ae,_ as se}from"./ga_GtlWe.js";import{f as le,u as ne,z as re,y as ie,S as me,T as de,B as _,v as L,g as ue,x as h,C as ce,i as F,w as a,A as _e,o as f,a as u,b as l,p as s,m as fe,d as n,c as W,k as pe,P as V,t as r,l as ve,D as p,Q as ge,F as be,r as ke,j as ye,J as we,s as $}from"./Y-qafJHk.js";import{_ as xe}from"./CZhnLKBG.js";import{_ as he}from"./5jZQ02og.js";import"./CZY7kBsU.js";const Ve={class:"flex flex-col md:flex-row"},Se={class:"px-5 md:w-4/5"},Te={class:"flex flex-col lg:flex-row px-3 py-3.5 border-b border-gray-200 dark:border-gray-700"},Be={class:"flex"},Ce={key:0,class:"flex flex-col md:flex-row items-center"},Ue={key:0},De={class:"p-4 flex flex-wrap max-w-64 max-h-60 overflow-y-auto"},Le=le({__name:"workers",setup(Me){ne({title:"Workers - Visionatrix",meta:[{name:"description",content:"Workers - Visionatrix"}]});const c=re(),b=ie();me(()=>{c.startPolling()}),de(()=>{c.stopPolling()});const S=[{id:"worker_status",label:"Worker status",sortable:!0},{id:"federated",label:"Federated",sortable:!0},{id:"busy",label:"Busy",sortable:!0},{id:"worker_id",label:"Worker ID"},{id:"worker_version",label:"Worker version",sortable:!0},{id:"last_seen",label:"Last seen",sortable:!0},{id:"tasks_to_give",label:"Tasks to give",sortable:!1},{id:"os",label:"OS",sortable:!0},{id:"version",label:"Python Version",sortable:!0},{id:"device_name",label:"Device name"},{id:"device_type",label:"Device type",sortable:!0},{id:"vram_total",label:"VRAM total",sortable:!0},{id:"vram_free",label:"VRAM free",sortable:!0},{id:"torch_vram_total",label:"Torch VRAM total",sortable:!0},{id:"torch_vram_free",label:"Torch VRAM free",sortable:!0},{id:"ram_total",label:"RAM total",sortable:!0},{id:"ram_free",label:"RAM free",sortable:!0}],k=S.map(e=>({key:e.id,label:e.label,sortable:e.sortable||!1,class:""})),O=localStorage.getItem("selectedColumns");let T=null;if(O!==null){const e=JSON.parse(O);T=k.filter(o=>e.includes(o.key)),T.sort(N)}const v=_(T||[...k]);L(v,e=>{localStorage.setItem("selectedColumns",JSON.stringify(Object.values(k).filter(o=>e.includes(o)).map(o=>o.key))),e.sort(N)});function N(e,o){return S.findIndex(i=>i.id===e.key)-S.findIndex(i=>i.id===o.key)}const y=ue(),B=h(()=>[...y.$state.flows_installed,...y.$state.flows_available].map(e=>({label:e.display_name,value:e.name}))),m=_([]);ce(()=>{if(y.flows.length===0){y.fetchFlows().then(()=>{m.value=[...B.value]});return}m.value=[...B.value]});const G=h(()=>m.value.length===0?"All":m.value.length),C=_(!1);function P(){C.value=!0,Promise.all(d.value.filter(e=>e.federated_instance_name==="").map(e=>c.setTasksToGive(e.worker_id,m.value.map(o=>o.value)))).then(()=>{$().add({title:"Tasks to give updated",description:"Tasks to give updated successfully"}),d.value=[]}).catch(()=>{$().add({title:"Failed to update tasks to give",description:"Try again"})}).finally(()=>{C.value=!1,c.loadWorkers()})}const g=_(""),U=h(()=>c.$state.workers),z=h(()=>U.value.filter(e=>Object.values(e).some(o=>String(o).toLowerCase().includes(g.value.toLowerCase()))));function R(e){const o=new Date(e.last_seen.includes("Z")?e.last_seen:e.last_seen+"Z");return new Date().getTime()-o.getTime()<=60*5*1e3?"Online":"Offline"}const d=_([]);L(U,e=>{if(d.value.length>0){const o=d.value.map(i=>i.worker_id);d.value=e.filter(i=>o.includes(i.worker_id))}});const j=["smart_memory"],D=_(!1);function J(){D.value=!0,b.saveChanges(j).finally(()=>{D.value=!1})}return(e,o)=>{const i=ee,M=te,q=ae,E=oe,w=fe,I=xe,H=se,K=ve,x=ye,Q=we,Y=ge,Z=he,X=_e;return f(),F(X,{class:"lg:h-dvh"},{default:a(()=>[u("div",Ve,[l(i,{links:s(b).links,class:"md:w-1/5"},null,8,["links"]),u("div",Se,[o[8]||(o[8]=u("h2",{class:"mb-3 text-xl"},"Workers",-1)),l(M,{class:"mb-3",label:"Default Workers settings"}),l(E,{size:"md",class:"py-3",label:"Smart memory",description:"When disabled forces ComfyUI to aggressively offload to regular ram instead of keeping models in vram when it can."},{default:a(()=>[l(q,{modelValue:s(b).settingsMap.smart_memory.value,"onUpdate:modelValue":o[0]||(o[0]=t=>s(b).settingsMap.smart_memory.value=t),color:"primary",label:"Enable smart memory"},null,8,["modelValue"])]),_:1}),l(w,{icon:"i-heroicons-check-16-solid",loading:s(D),onClick:J},{default:a(()=>o[6]||(o[6]=[n(" Save ")])),_:1},8,["loading"]),l(M,{class:"my-3"}),u("div",Te,[u("div",Be,[l(I,{modelValue:s(v),"onUpdate:modelValue":o[1]||(o[1]=t=>V(v)?v.value=t:null),class:"mr-3",options:s(k),multiple:""},null,8,["modelValue","options"]),l(H,{modelValue:s(g),"onUpdate:modelValue":o[2]||(o[2]=t=>V(g)?g.value=t:null),placeholder:"Filter workers..."},null,8,["modelValue"])]),s(d).length>=1?(f(),W("div",Ce,[l(I,{modelValue:s(m),"onUpdate:modelValue":o[3]||(o[3]=t=>V(m)?m.value=t:null),searchable:"",class:"mr-3 my-3 lg:mx-3 lg:my-0 w-full max-w-64 min-w-64",options:s(B),multiple:""},{label:a(()=>[u("span",null,"Tasks to give ("+r(s(G))+")",1)]),_:1},8,["modelValue","options"]),l(K,{text:"Flows available for worker to get tasks"},{default:a(()=>[l(w,{icon:"i-heroicons-check-16-solid",variant:"outline",color:"cyan",size:"sm",loading:s(C),onClick:P},{default:a(()=>o[7]||(o[7]=[n(" Update tasks to give ")])),_:1},8,["loading"])]),_:1}),l(w,{icon:"i-heroicons-x-mark",variant:"outline",color:"white",class:"ml-2",onClick:o[4]||(o[4]=()=>{m.value=[]})})])):pe("",!0)]),l(Z,{modelValue:s(d),"onUpdate:modelValue":o[5]||(o[5]=t=>V(d)?d.value=t:null),columns:s(v),rows:s(g)===""?s(U):s(z),loading:s(c).$state.loading},{"worker_status-data":a(({row:t})=>[l(x,{variant:"solid",color:R(t)==="Online"?"green":"red"},{default:a(()=>[n(r(R(t)),1)]),_:2},1032,["color"])]),"federated-data":a(({row:t})=>[l(x,{variant:"solid",color:t.federated_instance_name!==""?"blue":"green"},{default:a(()=>[n(r(t.federated_instance_name!==""?"Yes":"No"),1)]),_:2},1032,["color"])]),"busy-data":a(({row:t})=>[l(x,{variant:"solid",color:t.empty_task_requests_count===0?"red":"green"},{default:a(()=>[n(r(t.empty_task_requests_count===0?"Yes":"No"),1)]),_:2},1032,["color"])]),"tasks_to_give-data":a(({row:t})=>[t.tasks_to_give.length===0?(f(),W("span",Ue,"All")):(f(),F(Y,{key:1,popper:{placement:"bottom"}},{panel:a(()=>[u("div",De,[(f(!0),W(be,null,ke(t.tasks_to_give,A=>(f(),F(x,{key:A,class:"mr-2 mb-2",variant:"solid",color:"cyan"},{default:a(()=>[l(Q,{class:"hover:underline",to:`/workflows/${A}`},{default:a(()=>[n(r(A),1)]),_:2},1032,["to"])]),_:2},1024))),128))])]),default:a(()=>[l(w,{icon:"i-heroicons-list-bullet-16-solid",variant:"outline",color:"gray",size:"sm"},{default:a(()=>[u("span",null,r(t.tasks_to_give.length)+" selected",1)]),_:2},1024)]),_:2},1024))]),"last_seen-data":a(({row:t})=>[n(r(new Date(t.last_seen).toLocaleString()),1)]),"vram_total-data":a(({row:t})=>[n(r(("formatBytes"in e?e.formatBytes:s(p))(t.vram_total)),1)]),"vram_free-data":a(({row:t})=>[n(r(("formatBytes"in e?e.formatBytes:s(p))(t.vram_free)),1)]),"torch_vram_total-data":a(({row:t})=>[n(r(("formatBytes"in e?e.formatBytes:s(p))(t.torch_vram_total)),1)]),"torch_vram_free-data":a(({row:t})=>[n(r(("formatBytes"in e?e.formatBytes:s(p))(t.torch_vram_free)),1)]),"ram_total-data":a(({row:t})=>[n(r(("formatBytes"in e?e.formatBytes:s(p))(t.ram_total)),1)]),"ram_free-data":a(({row:t})=>[n(r(("formatBytes"in e?e.formatBytes:s(p))(t.ram_free)),1)]),_:1},8,["modelValue","columns","rows","loading"])])])]),_:1})}}});export{Le as default};
