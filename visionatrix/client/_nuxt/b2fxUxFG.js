import{_ as P}from"./B3wTn2IQ.js";import{a as $,_ as E}from"./XW-HZBd7.js";import{a as D,_ as q}from"./D20HAg8t.js";import{f as T,u as H,q as R,y as K,s as j,N as h,g as J,x as Q,v as W,M as X,i as v,w as i,A as Y,o as p,a,b as t,p as o,c as x,k as g,d,t as S,m as Z,O as A}from"./DIYZyP7P.js";import{_ as ee}from"./DtLhkt7h.js";import{_ as oe}from"./Czl4SAK0.js";import{_ as le}from"./DZjbicC_.js";const te={class:"flex flex-col md:flex-row"},se={class:"px-5 pb-5 md:w-4/5"},ae={key:0,class:"admin-settings mb-3"},ie={key:0,class:"text-gray-400 text-sm"},ne={key:0},re={class:"flex items-center relative"},de={class:"flex items-center relative"},ue={class:"flex items-center relative"},me={class:"flex items-center"},pe={class:"flex items-center relative"},ge={class:"flex w-full items-center my-2"},ce={class:"flex w-full items-center my-2"},_e={class:"flex items-center"},ve={class:"flex items-center"},fe={key:1,class:"mb-5 py-4"},ye={class:"flex items-center space-x-3"},ke={class:"user-settings mb-3"},he={class:"flex items-center relative"},Se=T({__name:"index",setup(xe){H({title:"Settings - Visionatrix",meta:[{name:"description",content:"Settings - Visionatrix"}]});const z=R(),l=K(),y=j(),I=["huggingface_auth_token","civitai_auth_token","google_api_key","google_api_key_user","google_proxy","gemini_model","ollama_url","ollama_vision_model","ollama_llm_model","ollama_keepalive","translations_provider","llm_provider","save_metadata"],w=h(!1);function F(){w.value=!0,l.saveChanges(I).finally(()=>{w.value=!1})}const f=J(),b=h(null),M=h(!1),O=Q(()=>l.ollamaFetchError!==""&&(l.settingsMap.ollama_vision_model.value!==""||l.settingsMap.ollama_llm_model.value!==""||l.settingsMap.translations_provider.value==="ollama"||l.settingsMap.llm_provider.value==="ollama"));function G(){const _=b.value.$refs.input.files[0]||null;if(!_){y.add({title:"No file selected",description:"Please select a file to upload"});return}M.value=!0,f.uploadFlow(_).then(e=>{if(console.debug("uploadFlow",e),e&&"detail"in e&&(e==null?void 0:e.detail)!==""){y.add({title:"Error uploading flow",description:e.detail});return}else y.add({title:"Flow uploaded",description:"Flow uploaded successfully"});b.value.$refs.input.value=""}).catch(e=>{console.debug("uploadFlow error",e),y.add({title:"Error uploading flow",description:e.message})}).finally(()=>{M.value=!1})}W(()=>f.outputMaxSize,()=>{f.saveUserOptions()}),X(()=>{l.loadAllSettings()});const n=h({huggingface_auth_token:!1,civitai_auth_token:!1,google_api_key:!1,google_api_key_user:!1,google_proxy:!1});return(_,e)=>{const L=P,B=$,r=D,c=E,u=Z,V=ee,k=q,U=oe,C=le,N=Y;return p(),v(N,{class:"lg:h-dvh"},{default:i(()=>[a("div",te,[t(L,{links:o(l).links,class:"md:w-1/5"},null,8,["links"]),a("div",se,[o(z).isAdmin?(p(),x("div",ae,[e[31]||(e[31]=a("h3",{class:"mb-3 text-xl font-bold"},"Admin preferences (global settings)",-1)),o(l).other.current_version!==""?(p(),x("div",ie,[a("span",null,"Current version: "+S(o(l).other.current_version),1),e[26]||(e[26]=d("Â  ")),o(l).other.next_version!==""?(p(),x("span",ne,"Next version: "+S(o(l).other.next_version),1)):g("",!0)])):g("",!0),t(r,{size:"md",class:"py-3",label:"Save metadata",description:"Save metadata to the output results."},{default:i(()=>[t(B,{modelValue:o(l).settingsMap.save_metadata.value,"onUpdate:modelValue":e[0]||(e[0]=s=>o(l).settingsMap.save_metadata.value=s),color:"primary",label:"Save metadata"},null,8,["modelValue"])]),_:1}),t(r,{size:"md",class:"py-3",label:"Huggingface Auth token",description:"Bearer authentication token from your Huggingface account to allow downloading gated models with limited access."},{default:i(()=>[a("div",re,[t(c,{modelValue:o(l).settingsMap.huggingface_auth_token.value,"onUpdate:modelValue":e[1]||(e[1]=s=>o(l).settingsMap.huggingface_auth_token.value=s),placeholder:"Huggingface Auth token",class:"w-full",type:o(n).huggingface_auth_token?"text":"password",icon:"i-heroicons-shield-check",size:"md",autocomplete:"off"},null,8,["modelValue","type"]),t(u,{icon:o(n).huggingface_auth_token?"i-heroicons-eye-slash-solid":"i-heroicons-eye-solid",variant:"ghost",color:"white",class:"ml-1 absolute right-1",onClick:e[2]||(e[2]=()=>{o(n).huggingface_auth_token=!o(n).huggingface_auth_token})},null,8,["icon"])])]),_:1}),t(r,{size:"md",class:"py-3",label:"CivitAI Auth Token",description:"Auth token for CivitAI flows and models."},{default:i(()=>[a("div",de,[t(c,{modelValue:o(l).settingsMap.civitai_auth_token.value,"onUpdate:modelValue":e[3]||(e[3]=s=>o(l).settingsMap.civitai_auth_token.value=s),placeholder:"CivitAI Auth Token",class:"w-full",type:o(n).civitai_auth_token?"text":"password",icon:"i-heroicons-shield-check",size:"md",autocomplete:"off"},null,8,["modelValue","type"]),t(u,{icon:o(n).civitai_auth_token?"i-heroicons-eye-slash-solid":"i-heroicons-eye-solid",variant:"ghost",color:"white",class:"ml-1 absolute right-1",onClick:e[4]||(e[4]=()=>{o(n).civitai_auth_token=!o(n).civitai_auth_token})},null,8,["icon"])])]),_:1}),t(V,{color:"blue",variant:"soft",icon:"i-heroicons-exclamation-circle",title:"Note"},{description:i(()=>e[27]||(e[27]=[d(" Access tokens are required for gated models. More information can be found "),a("a",{class:"hover:underline font-bold",href:"https://visionatrix.github.io/VixFlowsDocs/FlowsDeveloping/gated_models/",target:"_blank"},"here",-1),d(". ")])),_:1}),t(k,{class:"mt-3",label:"Gemini"}),e[32]||(e[32]=a("p",{class:"text-slate text-sm text-orange-300 dark:text-orange-100 text-center"},"Can be used by flows and as a translation provider",-1)),t(r,{size:"md",class:"py-3",label:"Google API key"},{description:i(()=>e[28]||(e[28]=[d(" Global Google API key, required for Flows, e.g. where ComfyUI-Gemini Node is used. Instruction how to obtain key can be found "),a("a",{class:"hover:underline font-bold",href:"https://ai.google.dev/gemini-api/docs/api-key"},"here",-1),d(". ")])),default:i(()=>[a("div",ue,[t(c,{modelValue:o(l).settingsMap.google_api_key.value,"onUpdate:modelValue":e[5]||(e[5]=s=>o(l).settingsMap.google_api_key.value=s),placeholder:"Google API key",class:"w-full",type:o(n).google_api_key?"text":"password",icon:"i-heroicons-shield-check",size:"md",autocomplete:"off"},null,8,["modelValue","type"]),t(u,{icon:o(n).google_api_key?"i-heroicons-eye-slash-solid":"i-heroicons-eye-solid",variant:"ghost",color:"white",class:"ml-1 absolute right-1",onClick:e[6]||(e[6]=()=>{o(n).google_api_key=!o(n).google_api_key})},null,8,["icon"])])]),_:1}),t(r,{size:"md",class:"py-3",label:"Gemini model",description:"Override Gemini model to use."},{default:i(()=>[a("div",me,[t(U,{modelValue:o(l).settingsMap.gemini_model.value,"onUpdate:modelValue":e[7]||(e[7]=s=>o(l).settingsMap.gemini_model.value=s),color:"white",variant:"outline",placeholder:"Select Gemini model",options:o(l).settingsMap.gemini_model.options},null,8,["modelValue","options"]),o(l).settingsMap.gemini_model.value?(p(),v(u,{key:0,icon:"i-heroicons-x-mark",variant:"outline",color:"white",class:"ml-2",onClick:e[8]||(e[8]=()=>o(l).settingsMap.gemini_model.value="")})):g("",!0)])]),_:1}),t(r,{size:"md",class:"py-3",label:"Proxy (for Google)"},{description:i(()=>e[29]||(e[29]=[d(" Proxy to access Gemini configuration "),a("a",{class:"hover:underline font-bold",href:"https://visionatrix.github.io/VixFlowsDocs/AdminManual/Installation/proxy_gemini/"},"string",-1),d(". ")])),default:i(()=>[a("div",pe,[t(c,{modelValue:o(l).settingsMap.google_proxy.value,"onUpdate:modelValue":e[9]||(e[9]=s=>o(l).settingsMap.google_proxy.value=s),placeholder:"Proxy",class:"w-full",type:o(n).google_proxy?"text":"password",size:"md",icon:"i-heroicons-shield-check",autocomplete:"off"},null,8,["modelValue","type"]),t(u,{icon:o(n).google_proxy?"i-heroicons-eye-slash-solid":"i-heroicons-eye-solid",variant:"ghost",color:"white",class:"ml-1 absolute right-1",onClick:e[10]||(e[10]=()=>{o(n).google_proxy=!o(n).google_proxy})},null,8,["icon"])])]),_:1}),t(k,{class:"mt-3",label:"Ollama"}),e[33]||(e[33]=a("p",{class:"text-slate text-sm text-orange-300 dark:text-orange-100 text-center"},"Can be used by flows and as a translation provider",-1)),t(r,{size:"md",class:"py-3",label:"Ollama URL",description:"URL to server where Ollama is running."},{default:i(()=>[t(c,{modelValue:o(l).settingsMap.ollama_url.value,"onUpdate:modelValue":e[11]||(e[11]=s=>o(l).settingsMap.ollama_url.value=s),placeholder:"Ollama URL",class:"w-full",type:"text",size:"md",autocomplete:"off"},null,8,["modelValue"]),o(O)?(p(),v(V,{key:0,color:"yellow",variant:"soft",class:"mt-3",icon:"i-heroicons-exclamation-circle",title:"Failed to fetch Ollama models list",description:o(l).ollamaFetchError},{actions:i(()=>[t(u,{icon:"i-heroicons-arrow-path-solid",variant:"outline",color:"white",onClick:e[12]||(e[12]=()=>o(l).getOllamaModelsList())},{default:i(()=>e[30]||(e[30]=[d(" Retry ")])),_:1})]),_:1},8,["description"])):g("",!0)]),_:1}),t(r,{size:"md",class:"py-3",label:"Ollama Vision Model",description:"Override Ollama Vision model used by default."},{default:i(()=>{var s;return[a("div",ge,[t(C,{modelValue:o(l).settingsMap.ollama_vision_model.value,"onUpdate:modelValue":e[13]||(e[13]=m=>o(l).settingsMap.ollama_vision_model.value=m),class:"w-full",options:(s=o(l).settingsMap.ollama_vision_model)!=null&&s.options?o(l).settingsMap.ollama_vision_model.options.map(m=>(m.label=`${m.model} (${("formatBytes"in _?_.formatBytes:o(A))(m.size)})`,m)):[],"value-attribute":"model",loading:o(l).settingsMap.ollama_vision_model.loading,placeholder:"Ollama Vision Model"},null,8,["modelValue","options","loading"]),o(l).settingsMap.ollama_vision_model.value?(p(),v(u,{key:0,icon:"i-heroicons-x-mark",variant:"outline",color:"white",class:"ml-2",onClick:e[14]||(e[14]=()=>o(l).settingsMap.ollama_vision_model.value="")})):g("",!0)])]}),_:1}),t(r,{size:"md",class:"py-3",label:"Ollama LLM Model",description:"Override Ollama LLM model used by default."},{default:i(()=>{var s;return[a("div",ce,[t(C,{modelValue:o(l).settingsMap.ollama_llm_model.value,"onUpdate:modelValue":e[15]||(e[15]=m=>o(l).settingsMap.ollama_llm_model.value=m),class:"w-full",options:(s=o(l).settingsMap.ollama_llm_model)!=null&&s.options?o(l).settingsMap.ollama_llm_model.options.map(m=>(m.label=`${m.model} (${("formatBytes"in _?_.formatBytes:o(A))(m.size)})`,m)):[],"value-attribute":"model",loading:o(l).settingsMap.ollama_llm_model.loading,placeholder:"Ollama LLM Model"},null,8,["modelValue","options","loading"]),o(l).settingsMap.ollama_llm_model.value?(p(),v(u,{key:0,icon:"i-heroicons-x-mark",variant:"outline",color:"white",class:"ml-2",onClick:e[16]||(e[16]=()=>o(l).settingsMap.ollama_llm_model.value="")})):g("",!0)])]}),_:1}),t(r,{size:"md",class:"py-3",label:"Ollama Keepalive",description:"Keep models in memory for specified minutes (e.g. 0.5 for 30 seconds). 0 unloads immediately; negative numbers keep indefinitely"},{default:i(()=>[t(c,{modelValue:o(l).settingsMap.ollama_keepalive.value,"onUpdate:modelValue":e[17]||(e[17]=s=>o(l).settingsMap.ollama_keepalive.value=s),placeholder:"Ollama Keepalive",class:"w-fit",type:"number",size:"md",step:"0.1",autocomplete:"off",onChange:e[18]||(e[18]=()=>{o(l).settingsMap.ollama_keepalive.value=o(l).settingsMap.ollama_keepalive.value.toString()})},null,8,["modelValue"])]),_:1}),t(k,{class:"mt-3",label:"AI providers"}),t(r,{size:"md",class:"py-3",label:"Translations provider",description:"Prompt translations provider. Empty if not enabled."},{default:i(()=>[a("div",_e,[t(U,{modelValue:o(l).settingsMap.translations_provider.value,"onUpdate:modelValue":e[19]||(e[19]=s=>o(l).settingsMap.translations_provider.value=s),color:"white",variant:"outline",placeholder:"Select translations provider",options:o(l).settingsMap.translations_provider.options},null,8,["modelValue","options"]),o(l).settingsMap.translations_provider.value?(p(),v(u,{key:0,icon:"i-heroicons-x-mark",variant:"outline",color:"white",class:"ml-2",onClick:e[20]||(e[20]=()=>o(l).settingsMap.translations_provider.value="")})):g("",!0)])]),_:1}),t(r,{size:"md",class:"py-3",label:"LLM provider",description:"LLM  provider. Empty if not enabled."},{default:i(()=>[a("div",ve,[t(U,{modelValue:o(l).settingsMap.llm_provider.value,"onUpdate:modelValue":e[21]||(e[21]=s=>o(l).settingsMap.llm_provider.value=s),color:"white",variant:"outline",placeholder:"Select LLM provider",options:o(l).settingsMap.llm_provider.options},null,8,["modelValue","options"]),o(l).settingsMap.llm_provider.value?(p(),v(u,{key:0,icon:"i-heroicons-x-mark",variant:"outline",color:"white",class:"ml-2",onClick:e[22]||(e[22]=()=>o(l).settingsMap.llm_provider.value="")})):g("",!0)])]),_:1})])):g("",!0),o(z).isAdmin?(p(),x("div",fe,[e[36]||(e[36]=a("h4",{class:"mb-3 font-bold"},"Upload Flow",-1)),e[37]||(e[37]=a("p",{class:"text-gray-400 text-sm mb-3"}," Upload a Visionatrix workflow file (.json) to add it to the available flows. Upon successful upload of a valid workflow file, the installation will start automatically. ",-1)),a("div",ye,[t(c,{ref_key:"flowFileInput",ref:b,type:"file",accept:".json",class:"w-auto"},null,512),t(u,{icon:"i-heroicons-arrow-up-tray-16-solid",variant:"outline",loading:o(M),onClick:G},{default:i(()=>e[34]||(e[34]=[d(" Upload Flow ")])),_:1},8,["loading"])]),t(V,{class:"mt-3",color:"blue",variant:"soft",icon:"i-heroicons-exclamation-circle",title:"Note"},{description:i(()=>e[35]||(e[35]=[d(" Requires a Visionatrix-adapted ComfyUI workflow, not a standard ComfyUI workflow. Instructions for adapting a ComfyUI workflow for Visionatrix are available "),a("a",{class:"hover:underline font-bold",href:"https://visionatrix.github.io/VixFlowsDocs/FlowsDeveloping/comfyui_vix_migration/"},"here",-1),d(". Custom workflows may require manual installation of dependencies (e.g., custom nodes) before upload. ")])),_:1})])):g("",!0),a("div",ke,[e[39]||(e[39]=a("h3",{class:"mb-3 text-xl font-bold"},"User preferences (overrides global)",-1)),t(r,{size:"md",class:"py-3",label:"Google API key"},{description:i(()=>e[38]||(e[38]=[d(" Google API key, required for Flows, e.g. where ComfyUI-Gemini Node is used. Instruction how to obtain key "),a("a",{class:"hover:underline font-bold",href:"https://ai.google.dev/gemini-api/docs/api-key"},"here",-1),d(". ")])),default:i(()=>[a("div",he,[t(c,{modelValue:o(l).settingsMap.google_api_key_user.value,"onUpdate:modelValue":e[23]||(e[23]=s=>o(l).settingsMap.google_api_key_user.value=s),placeholder:"Google API key",class:"w-full",type:o(n).google_api_key_user?"text":"password",icon:"i-heroicons-shield-check",size:"md",autocomplete:"off"},null,8,["modelValue","type"]),t(u,{icon:o(n).google_api_key_user?"i-heroicons-eye-slash-solid":"i-heroicons-eye-solid",variant:"ghost",color:"white",class:"ml-1 absolute right-1",onClick:e[24]||(e[24]=()=>{o(n).google_api_key_user=!o(n).google_api_key_user})},null,8,["icon"])])]),_:1}),t(k,{class:"mt-3",label:"UI preferences"}),e[40]||(e[40]=a("p",{class:"text-slate text-sm text-orange-300 dark:text-orange-100 text-center"},"Stored in browser local storage",-1)),t(r,{size:"md",class:"py-3",label:"Outputs maximum image size",description:"To keep the output seamless, we limit the size of the outputs (512px by default)."},{default:i(()=>[t(C,{modelValue:o(f).$state.outputMaxSize,"onUpdate:modelValue":e[25]||(e[25]=s=>o(f).$state.outputMaxSize=s),options:["512","768","1024","1536","2048"]},null,8,["modelValue"])]),_:1})]),t(u,{icon:"i-heroicons-check-16-solid",loading:o(w),onClick:F},{default:i(()=>e[41]||(e[41]=[d(" Save ")])),_:1},8,["loading"])])])]),_:1})}}});export{Se as default};
