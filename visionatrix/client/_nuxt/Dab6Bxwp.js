import{_ as k}from"./A7Aezh68.js";import{g as w,u as y,s as b,v as V,j as M,w as l,q as U,o as m,a as i,b as s,i as o,c as S,k as A,d as p,x as u,m as G,l as z}from"./DD87nl7n.js";import{_ as I}from"./Dk6y_9Y2.js";import{_ as P}from"./DjjSeWV3.js";import"./DgrOK64h.js";const C={class:"flex flex-col md:flex-row"},N={class:"px-5 pb-5 md:w-4/5"},q=i("h2",{class:"mb-3 text-xl"},"Settings",-1),B={key:0,class:"admin-settings mb-3"},F=i("h3",{class:"mb-3"},"Admin settings",-1),H={class:"flex items-center"},O=i("p",{class:"text-amber-400"},[i("span",null,"Access tokens are required forÂ "),i("a",{class:"hover:underline underline-offset-4",href:"https://visionatrix.github.io/VixFlowsDocs/GatedModels.html",target:"_blank"},"gated models"),p(". ")],-1),L={class:"user-settings mb-3"},R=i("h3",{class:"mb-3"},"User settings",-1),J=w({__name:"index",setup(j){y({title:"Settings - Visionatrix",meta:[{name:"description",content:"Settings - Visionatrix"}]});const _=[{label:"Settings",icon:"i-heroicons-cog-6-tooth-20-solid",to:"/settings"},{label:"Workers information",icon:"i-heroicons-chart-bar-16-solid",to:"/settings/workers"}],e=b();function g(){console.debug("Saving settings",e.settingsMap.value),Promise.all(Object.keys(e.settingsMap).map(n=>e.settingsMap[n].admin&&c.isAdmin?e.saveGlobalSetting(e.settingsMap[n].key,e.settingsMap[n].value,e.settingsMap[n].sensitive):e.saveUserSetting(e.settingsMap[n].key,e.settingsMap[n].value))).then(()=>{u().add({title:"Settings saved",description:"Settings saved successfully"})}).catch(n=>{u().add({title:"Error saving setting",description:n.message})})}const c=V();return(n,t)=>{const h=k,f=G,r=I,d=P,v=z,x=U;return m(),M(x,{class:"lg:h-dvh"},{default:l(()=>[i("div",C,[s(h,{links:_,class:"md:w-1/5"}),i("div",N,[q,o(c).isAdmin?(m(),S("div",B,[F,i("div",H,[s(f,{name:"i-heroicons-question-mark-circle",class:"mr-2 text-amber-400"}),O]),s(d,{size:"md",class:"py-3",label:"Huggingface Auth token",description:"Bearer authentication token from your Huggingface account to allow downloading gated models with limited access"},{default:l(()=>[s(r,{modelValue:o(e).settingsMap.huggingface_auth_token.value,"onUpdate:modelValue":t[0]||(t[0]=a=>o(e).settingsMap.huggingface_auth_token.value=a),placeholder:"Huggingface Auth token",class:"w-full",type:"password",icon:"i-heroicons-shield-check",size:"md"},null,8,["modelValue"])]),_:1}),s(d,{size:"md",class:"py-3",label:"Gemini API key",description:"Global Gemini API key, required for Flows where ComfyUI-Gemini Node is used"},{default:l(()=>[s(r,{modelValue:o(e).settingsMap.gemini_token.value,"onUpdate:modelValue":t[1]||(t[1]=a=>o(e).settingsMap.gemini_token.value=a),placeholder:"Gemini API key",class:"w-full",type:"password",icon:"i-heroicons-shield-check",size:"md"},null,8,["modelValue"])]),_:1}),s(d,{size:"md",class:"py-3",label:"Proxy",description:"Proxy configuration string (to access Gemini)"},{default:l(()=>[s(r,{modelValue:o(e).settingsMap.proxy.value,"onUpdate:modelValue":t[2]||(t[2]=a=>o(e).settingsMap.proxy.value=a),placeholder:"Proxy",class:"w-full",type:"text",size:"md"},null,8,["modelValue"])]),_:1}),s(d,{size:"md",class:"py-3",label:"Ollama URL",description:"URL to server where Ollama is running, required for flows using node with it"},{default:l(()=>[s(r,{modelValue:o(e).settingsMap.ollama_url.value,"onUpdate:modelValue":t[3]||(t[3]=a=>o(e).settingsMap.ollama_url.value=a),placeholder:"Ollama URL",class:"w-full",type:"text",size:"md"},null,8,["modelValue"])]),_:1})])):A("",!0),i("div",L,[R,s(d,{size:"md",class:"py-3",label:"Gemini API key",description:"Gemini API key, required for Flows where ComfyUI-Gemini Node is used"},{default:l(()=>[s(r,{modelValue:o(e).settingsMap.gemini_token_user.value,"onUpdate:modelValue":t[4]||(t[4]=a=>o(e).settingsMap.gemini_token_user.value=a),placeholder:"Gemini API key",class:"w-full",type:"password",icon:"i-heroicons-shield-check",size:"md"},null,8,["modelValue"])]),_:1})]),s(v,{icon:"i-heroicons-check-16-solid",onClick:g},{default:l(()=>[p(" Save ")]),_:1})])])]),_:1})}}});export{J as default};
